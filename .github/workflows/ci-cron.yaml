# This is a separate run of the Python test suite that doesn't cache the tox
# environment and runs from a schedule.  The purpose is to test compatibility
# with the latest versions of dependencies.

name: Periodic CI

env:
  PYTHON_VERSION: "3.12"

"on":
  schedule:
    - cron: "0 12 * * 1"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version-file: '.nvmrc'

      - name: Authenticate GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NPM_PKG_TOKEN}" > ~/.npmrc
        env:
          NPM_PKG_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: npm install and build
        run: |
          npm install
          npm run build

      - name: Run tox
        uses: lsst-sqre/run-tox@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          tox-envs: 'lint'
          use-cache: false

      - name: Report status
        if: failure()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notify_when: "failure"
          notification_title: "Periodic lint for {repo} failed"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_ALERT_WEBHOOK }}

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"
        sphinx-version:
          - "7"
          - "8"
          - "dev"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Authenticate GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NPM_PKG_TOKEN}" > ~/.npmrc
        env:
          NPM_PKG_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: npm install and build
        run: |
          npm install
          npm run build

      - name: Install graphviz
        run: |
          sudo apt-get update
          sudo apt-get install graphviz

      - name: Run tests in tox
        uses: lsst-sqre/run-tox@v1
        with:
          python-version: ${{ matrix.python-version }}
          tox-envs: "typing-sphinx${{ matrix.sphinx-version }},py-test-sphinx${{ matrix.sphinx-version }},demo"
          use-cache: false

      - name: Report status
        if: failure()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notify_when: "failure"
          notification_title: "Periodic test for {repo} failed"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_ALERT_WEBHOOK }}

  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - name: Build docs in tox
        uses: lsst-sqre/run-tox@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          tox-envs: "docs,docs-lint"
          use-cache: false

      - name: Report status
        if: failure()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notify_when: "failure"
          notification_title: "Periodic documentation test for {repo} failed"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_ALERT_WEBHOOK }}

  pypi:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Authenticate GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NPM_PKG_TOKEN}" > ~/.npmrc
        env:
          NPM_PKG_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: npm install and build
        run: |
          npm install
          npm run build

      - name: Build and publish
        uses: lsst-sqre/build-and-publish-to-pypi@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          upload: false

      - name: Report status
        if: failure()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notify_when: "failure"
          notification_title: "Periodic packaging test for {repo} failed"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_ALERT_WEBHOOK }}
