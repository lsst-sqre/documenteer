name: CI

"on":
  push:
    branches-ignore:
      # These should always correspond to pull requests, so ignore them for
      # the push trigger and let them be triggered by the pull_request
      # trigger, avoiding running the workflow twice.  This is a minor
      # optimization so there's no need to ensure this is comprehensive.
      - "dependabot/**"
      - "renovate/**"
      - "tickets/**"
      - "u/**"
    tags:
      - "*"
  pull_request: {}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Set Python version for linting
        run: echo '::set-output name=PYTHON_VERSION::3.10'
        id: python-version

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ steps.python-version.outputs.PYTHON_VERSION }}
          cache: "pip"
          cache-dependency-path: "setup.cfg"

      - name: Cache tox environment
        id: cache-tox
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-lint-${{ steps.python-version.outputs.PYTHON_VERSION }}-${{ hashFiles('pre-commit-config.yaml', 'pyproject.toml', 'setup.cfg') }}

      - name: Python install
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox

      - name: Run linters
        run: tox -e lint,docs-lint,packaging

  test:
    runs-on: ubuntu-latest
    needs: [lint]

    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        sphinx-version:
          - "2"
          - "3"
          - "4"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "setup.cfg"

      - name: Python install
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox

      - name: Cache tox environment
        id: cache-tox
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-${{ strategy.matrix.python-version }}-${{ strategy.matrix.sphinx-version }}-${{ hashFiles('pyproject.toml', 'setup.cfg') }}

      - name: Run tox
        run: tox -e py-test-sphinx${{ matrix.sphinx-version }},typing-sphinx${{ matrix.sphinx-version }}

  docs:
    runs-on: ubuntu-latest
    needs: [lint]

    steps:
      - name: Set Python version for linting
        run: echo '::set-output name=PYTHON_VERSION::3.10'
        id: python-version

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - name: Install Graphviz
        run: sudo apt-get install graphviz

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ steps.python-version.outputs.PYTHON_VERSION }}
          cache: "pip"
          cache-dependency-path: "setup.cfg"

      - name: Python install
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox ltd-conveyor

      - name: Cache tox environment
        id: cache-tox
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-docs-${{ steps.python-version.outputs.PYTHON_VERSION }}-${{ hashFiles('pyproject.toml', 'setup.cfg') }}

      - name: Build docs
        run: tox -e docs

      - name: Upload documentation
        if: >
          startsWith(github.ref, 'refs/tags/')
          || startsWith(github.head_ref, 'tickets/')
          || github.head_ref == 'main'
        env:
          LTD_PASSWORD: ${{ secrets.LTD_PASSWORD }}
          LTD_USERNAME: ${{ secrets.LTD_USERNAME }}
        run: |
          ltd upload --gh --dir docs/_build/html --product documenteer

  pypi:

    runs-on: ubuntu-latest
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "setup.cfg"

      - name: Python install
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel

      - name: Build
        run: python setup.py sdist bdist_wheel

      - name: Upload
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_SQRE_ADMIN }}
