[tox]
envlist =
    py-test-sphinx7
    coverage-report
    typing-sphinx7
    lint
    docs
    docs-lint
    packaging
isolated_build = True
skip_missing_interpreters = True

[testenv]
description =
    Run pytest
    sphinx7: with sphinx 7.*
    sphinxdev: with sphinx master branch
deps =
    sphinx7: sphinx==7.*
    sphinxdev: git+https://github.com/sphinx-doc/sphinx.git#egg=sphinx
extras =
    dev
    guide
    pipelines
    technote
commands=
    coverage run -m pytest {posargs}

[testenv:coverage-report]
description = Compile coverage from each test run.
skip_install = true
deps = coverage[toml]>=5.0.2
depends =
    py-test-sphinx{6}
commands =
    coverage combine
    coverage report

[testenv:lint]
description = Lint codebase by running pre-commit (Black, isort, Flake8).
skip_install = true
deps =
    pre-commit
commands = pre-commit run --all-files

[testenv:typing-sphinx{7,dev}]
description = Run mypy.
deps =
    mypy
    sphinx7: sphinx==7.*
    sphinxdev: git+https://github.com/sphinx-doc/sphinx.git#egg=sphinx
commands =
    mypy src tests

[testenv:docs]
description = Build Sphinx documentation
allowlist_externals =
    make
commands = make -C docs html

[testenv:docs-lint]
description = Lint the Sphinx documentation
allowlist_externals =
    make
commands = make -C docs linkcheck

[testenv:packaging]
description = Check packaging for PyPI with twine
skip_install = true
allowlist_externals =
    rm
deps =
    build
    twine
commands =
    rm -rf dist
    python -m build
    twine check dist/*

[testenv:demo]
description = Build demo projects.
allowlist_externals =
    rm
commands =
    rm -rf demo/rst-technote/_build
    sphinx-build --keep-going -n -W -T -b html -d {envtmpdir}/doctrees demo/rst-technote demo/rst-technote/_build/html
